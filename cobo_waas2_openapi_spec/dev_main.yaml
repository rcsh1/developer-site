openapi: 3.0.3

info:
  title: Cobo Wallet as a Service 2.0
  description: |
    Cobo WaaS 2.0 enables you to programmatically access Cobo's full suite of
    crypto wallet technologies with powerful and flexible access controls.

    # Wallet technologies
    - Custodial Wallet
    - MPC Wallet
    - Smart Contract Wallet (Based on Safe{Wallet})
    - Exchange Wallet
    
    # Risk Control technologies
    - Workflow
    - Access Control List (ACL)

    # Risk Control targets
    - Wallet Management
      - User/team and their permission management
      - Risk control configurations, e.g. whitelist, blacklist, rate-limiting etc.
    - Blockchain Interaction
      - Crypto transfer
      - Smart Contract Invocation

    # Important
    HTTPS only. RESTful, resource oriented

    # Get Started
    Set up your APIs or get authorization

    # Authentication and Authorization
    CoboAuth

    # Request and Response
    application/json

    # Error Handling

    ### Common error codes
    | Error Code | Description |
    | -- | -- |

    ### API-specific error codes
    For error codes that are dedicated to a specific API, see the Error codes section in each API specification, for example, /v3/wallets.

    # Rate and Usage Limiting

    # Idempotent Request

    # Pagination
    # Support
    [Developer Hub](https://cobo.com/developers)

  termsOfService: https://cobo.com/waas/tos/
  license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Cobo WaaS
    url: https://www.cobo.com/waas
    email: support@cobo.com
  version: 1.0.0
servers:
  - url: https://api.cobo.com/v3
    description: Production environment
  - url: https://api.dev.cobo.com/v3
    description: Development environment

tags:
  - name: Wallets
    description: Operations related to all wallets.
  - name: Wallets - MPC Wallet
    description: Operations related to mpc wallet.
  - name: Wallets - Exchange Wallet
    description: Operations related to exchange wallet.
  - name: Transactions
    description: Operations related to all transactions.
  - name: Developers - Webhooks
    description: Operations related to webhooks.

paths:
  # wallets
  /wallets/chains:
    $ref: "./paths/wallets/chains.yaml"
  /wallets/assets:
    $ref: "./paths/wallets/assets.yaml"
  /wallets/tokens:
    $ref: "./paths/wallets/tokens.yaml"
  /wallets/supported_chains:
    $ref: "./paths/wallets/supported_chains.yaml"
  /wallets/supported_tokens:
    $ref: "./paths/wallets/supported_tokens.yaml"
  /wallets/{wallet_id}/tokens:
    $ref: "./paths/wallets/wallet_token_balances.yaml"
  /wallets/{wallet_id}/addresses/{address_id}/tokens:
    $ref: "./paths/wallets/wallet_address_token_balances.yaml"
  /wallets:
    $ref: "./paths/wallets/wallets.yaml"
  /wallets/{wallet_id}:
    $ref: "./paths/wallets/wallet_by_id.yaml"
  /wallets/{wallet_id}/spendables:
    $ref: "./paths/wallets/spendable_utxo.yaml"
  /wallets/{wallet_id}/max_sendable_value:
    $ref: "./paths/wallets/max_send_value.yaml"
  /wallets/{wallet_id}/addresses:
    $ref: "./paths/wallets/wallet_addresses.yaml"
  /wallets/{wallet_id}/addresses/{address_id}:
    $ref: "./paths/wallets/wallet_address_by_id.yaml"
  /wallets/address/validity:
    $ref: "./paths/wallets/address_validity.yaml"

  # mpc wallets
  /wallets/mpc/cobo_key_holders:
    $ref: "./paths/wallets/mpcs/cobo_key_holders.yaml"
  /wallets/mpc/projects:
    $ref: "./paths/wallets/mpcs/projects.yaml"
  /wallets/mpc/projects/{project_id}:
    $ref: "./paths/wallets/mpcs/project.yaml"
  /wallets/mpc/vaults:
    $ref: "./paths/wallets/mpcs/mpc_vaults.yaml"
  /wallets/mpc/vaults/{vault_id}:
    $ref: "./paths/wallets/mpcs/mpc_vault.yaml"
  /wallets/mpc/vaults/{vault_id}/key_groups:
    $ref: './paths/wallets/mpcs/key_groups.yaml'
  /wallets/mpc/vaults/{vault_id}/key_groups/{key_group_id}:
    $ref: './paths/wallets/mpcs/key_group.yaml'
  /wallets/mpc/vaults/{vault_id}/tss_requests:
    $ref: './paths/wallets/mpcs/tss_requests.yaml'
  /wallets/mpc/vaults/{vault_id}/tss_requests/{tss_request_id}:
    $ref: "./paths/wallets/mpcs/tss_request.yaml"

  # exchange wallets
  /wallets/exchanges/{exchange_id}/supported_assets:
    $ref: "./paths/wallets/exchanges/exchange_supported_assets.yaml"
  /wallets/exchanges/{exchange_id}/assets/supported_chains:
    $ref: "./paths/wallets/exchanges/exchange_supported_chains.yaml"
  /wallets/exchanges/{wallet_id}/assets:
    $ref: "./paths/wallets/exchanges/exchange_wallet_asset_balances.yaml"
  /wallets/exchanges/settings:
    $ref: "./paths/wallets/exchanges/exchange_settings.yaml"
  /wallets/{wallet_id}/exchanges/subaccounts:
    $ref: "./paths/wallets/exchanges/subaccounts_by_wallet_id.yaml"
  /wallets/exchanges/{exchange_id}/subaccounts:
    $ref: "./paths/wallets/exchanges/subaccounts_by_apikey.yaml"

  # transactions
  /transactions/fee_price:
    $ref: "./paths/transactions/fee_price.yaml"
  /transactions/estimate_fee:
    $ref: "./paths/transactions/estimate_fee.yaml"
  /transactions/transfer:
    $ref: "./paths/transactions/transfer.yaml"
  /transactions/call:
    $ref: "./paths/transactions/call.yaml"
  /transactions/sign:
    $ref: "./paths/transactions/sign.yaml"
  /transactions:
    $ref: "./paths/transactions/transactions.yaml"
  /transactions/{transaction_id}:
    $ref: "./paths/transactions/transaction_by_id.yaml"
  /transactions/{transaction_id}/drop:
    $ref: "./paths/transactions/transaction_drop.yaml"
  /transactions/{transaction_id}/resend:
    $ref: "./paths/transactions/transaction_resend.yaml"
  /transactions/{transaction_id}/speedup:
    $ref: "./paths/transactions/transaction_speed_up.yaml"
  /transactions/{transaction_id}/double_check/retry:
    $ref: "./paths/transactions/transaction_retry_double_check.yaml"

  # webhooks
  /webhooks/events/definitions:
   $ref: "./paths/webhooks/supported_event_definitions.yaml"
  /webhooks/events:
    $ref: "./paths/webhooks/events.yaml"
  /webhooks/events/{event_id}:
    $ref: "./paths/webhooks/event_by_id.yaml"
  /webhooks/events/{event_id}/logs:
    $ref: "./paths/webhooks/logs_by_event_id.yaml"
  /webhooks/events/{event_id}/retry:
    $ref: "./paths/webhooks/retry_by_event_id.yaml"

components:
  schemas:
    # misc
    Pagination:
      $ref: "./components/schemas/pagination/metadata.yaml"
    ErrorResponse:
      $ref: "./components/schemas/errors/response.yaml"

    # wallets
    AssetInfo:
      $ref: "./components/schemas/wallets/asset.yaml"
    TokenInfo:
      $ref: "./components/schemas/wallets/token.yaml"
    ChainInfo:
      $ref: "./components/schemas/wallets/chain.yaml"
    WalletType:
      $ref: "./components/schemas/wallets/bases/wallet_type.yaml"
    WalletSubtype:
      $ref: "./components/schemas/wallets/bases/wallet_subtype.yaml"
    SmartContractWalletType:
      $ref: "./components/schemas/wallets/smart_contracts/smart_contract_wallet_type.yaml"
    SmartContractWalletOperationType:
      $ref: "./components/schemas/wallets/smart_contracts/operation_type.yaml"
    ExchangeId:
      $ref: "./components/schemas/wallets/exchanges/exchange_id.yaml"
    TokenBalance:
      $ref: "./components/schemas/wallets/balances/token_balance.yaml"
    AssetBalance:
      $ref: "./components/schemas/wallets/balances/asset_balance.yaml"
    SafeWallet:
      $ref: "./components/schemas/wallets/smart_contracts/safe_wallet.yaml"
    CustodialWalletInfo:
      $ref: "./components/schemas/wallets/bases/base_wallet_info.yaml"
    MPCWalletInfo:
      $ref: "./components/schemas/wallets/mpcs/mpc_wallet_info.yaml"
    SmartContractWalletInfo:
      $ref: "./components/schemas/wallets/smart_contracts/smart_contract_wallet_info.yaml"
    ExchangeWalletInfo:
      $ref: "./components/schemas/wallets/exchanges/exchange_wallet_info.yaml"
    WalletInfo:
      $ref: "./components/schemas/wallets/wallet_info.yaml"
    BaseCreateWallet:
      $ref: "./components/schemas/wallets/create_wallets/base_create_wallet.yaml"
    CreatedWallet:
      $ref: "./components/schemas/wallets/create_wallets/create_wallet.yaml"
    UTXO:
      $ref: "./components/schemas/wallets/balances/utxo.yaml"
    MaxSendValue:
      $ref: "./components/schemas/wallets/balances/max_send_value.yaml"
    AddressInfo:
      $ref: "./components/schemas/wallets/addresses/address_info.yaml"
    AddressEncoding:
      $ref: "./components/schemas/wallets/addresses/address_encoding.yaml"
    CreateCustodialWallet:
      $ref: "./components/schemas/wallets/create_wallets/create_custodial_wallet.yaml"
    CreateMpcWallet:
      $ref: "./components/schemas/wallets/create_wallets/create_mpc_wallet.yaml"
    CreateSmartContractWallet:
      $ref: "./components/schemas/wallets/create_wallets/create_smart_contract_wallet.yaml"
    CreateSafeWallet:
      $ref: "./components/schemas/wallets/create_wallets/smart_contract_wallets/create_safe_wallet.yaml"
    CreateExchangeWallet:
      $ref: "./components/schemas/wallets/create_wallets/create_exchange_wallet.yaml"

    # mpc wallets
    CurveType:
      $ref: "./components/schemas/wallets/mpcs/curve_type.yaml"
    KeyGroup:
      $ref: "./components/schemas/wallets/mpcs/key_group.yaml"
    KeyGroupStatus:
      $ref: "./components/schemas/wallets/mpcs/key_group_status.yaml"
    KeyGroupType:
      $ref: "./components/schemas/wallets/mpcs/key_group_type.yaml"
    KeyHolder:
      $ref: "./components/schemas/wallets/mpcs/key_holder.yaml"
    KeyHolderStatus:
      $ref: "./components/schemas/wallets/mpcs/key_holder_status.yaml"
    KeyHolderType:
      $ref: "./components/schemas/wallets/mpcs/key_holder_type.yaml"
    MPCVault:
      $ref: "./components/schemas/wallets/mpcs/mpc_vault.yaml"
    MPCVaultType:
      $ref: "./components/schemas/wallets/mpcs/mpc_vault_type.yaml"
    MPCProject:
      $ref: "./components/schemas/wallets/mpcs/project.yaml"
    RootPubkey:
      $ref: "./components/schemas/wallets/mpcs/root_pubkey.yaml"
    TSSGroupId:
      $ref: "./components/schemas/wallets/mpcs/tss_group_id.yaml"
    TSSRequest:
      $ref: "./components/schemas/wallets/mpcs/tss_request.yaml"
    TSSRequestStatus:
      $ref: "./components/schemas/wallets/mpcs/tss_request_status.yaml"
    TSSRequestType:
      $ref: "./components/schemas/wallets/mpcs/tss_request_type.yaml"

    # fees
    FeeType:
      $ref: "./components/schemas/transactions/fees/fee_type.yaml"
    FeeAmount:
      $ref: "./components/schemas/transactions/fees/fee_amount.yaml"
    FeeData:
      $ref: "./components/schemas/transactions/fees/fee_data.yaml"
    EvmEip1559FeeBasePrice:
      $ref: "./components/schemas/transactions/fees/base_fee_price_eip1559.yaml"
    EvmLegacyFeeBasePrice:
      $ref: "./components/schemas/transactions/fees/base_fee_price_legacy.yaml"
    UtxoFeeBasePrice:
      $ref: "./components/schemas/transactions/fees/base_fee_price_utxo.yaml"
    EvmEip1559FeePrice:
      $ref: "./components/schemas/transactions/fees/fee_price_eip1559.yaml"
    EvmLegacyFeePrice:
      $ref: "./components/schemas/transactions/fees/fee_price_legacy.yaml"
    UtxoFeePrice:
      $ref: "./components/schemas/transactions/fees/fee_price_utxo.yaml"
    FixedFee:
      $ref: "./components/schemas/transactions/fees/fee_fixed.yaml"
    EvmEip1559Fee:
      $ref: "./components/schemas/transactions/fees/fee_eip1559.yaml"
    EvmLegacyFee:
      $ref: "./components/schemas/transactions/fees/fee_legacy.yaml"
    UtxoFee:
      $ref: "./components/schemas/transactions/fees/fee_utxo.yaml"
    ChainFeePrice:
      $ref: "./components/schemas/transactions/fees/chain_fee_price.yaml"
    EstimationFee:
      $ref: "./components/schemas/transactions/fees/estimation_fee.yaml"
    EvmEip1559TransactionFee:
      $ref: "./components/schemas/transactions/fees/transaction_fee_eip1559.yaml"
    EvmLegacyTransactionFee:
      $ref: "./components/schemas/transactions/fees/transaction_fee_legacy.yaml"
    UtxoTransactionFee:
      $ref: "./components/schemas/transactions/fees/transaction_fee_utxo.yaml"
    TransactionFee:
      $ref: "./components/schemas/transactions/fees/transaction_fee.yaml"

    # transactions
    Transaction:
      $ref: "./components/schemas/transactions/transactions/transaction.yaml"
    TransactionApprover:
      $ref: "./components/schemas/transactions/transactions/transaction_approver.yaml"
    TransactionToken:
      $ref: "./components/schemas/transactions/transactions/transaction_token.yaml"
    TransactionCategory:
      $ref: "./components/schemas/transactions/transactions/transaction_category.yaml"
    TransactionDetails:
      $ref: "./components/schemas/transactions/transactions/transaction_details.yaml"
    TransactionInitiatorType:
      $ref: "./components/schemas/transactions/transactions/transaction_initiator_type.yaml"
    TransactionSigner:
      $ref: "./components/schemas/transactions/transactions/transaction_signer.yaml"
    TransactionStatus:
      $ref: "./components/schemas/transactions/transactions/transaction_status.yaml"
    TransactionSubStatus:
      $ref: "./components/schemas/transactions/transactions/transaction_sub_status.yaml"
    TransactionTimeline:
      $ref: "./components/schemas/transactions/transactions/transaction_timeline.yaml"
    TransactionTokeApproval:
      $ref: "./components/schemas/transactions/transactions/transaction_token_approval.yaml"
    TransactionType:
      $ref: "./components/schemas/transactions/transactions/transaction_type.yaml"
    MpcSigningGroup:
      $ref: "./components/schemas/transactions/mpc_signing_group.yaml"
    TransactionAddressType:
      $ref: "./components/schemas/transactions/transactions/addresses/transaction_address_type.yaml"
    BaseTransactionAddress:
      $ref: "./components/schemas/transactions/transactions/addresses/base_transaction_address.yaml"
    SafeTransactionAddress:
      $ref: "./components/schemas/transactions/transactions/addresses/safe_transaction_address.yaml"
    BaseWalletTransactionAddress:
      $ref: "./components/schemas/transactions/transactions/addresses/base_wallet_transaction_address.yaml"
    MPCWalletTransactionAddress:
      $ref: "./components/schemas/transactions/transactions/addresses/mpc_wallet_transaction_address.yaml"
    ExchangeWalletTransactionAddress:
      $ref: "./components/schemas/transactions/transactions/addresses/exchange_wallet_transaction_address.yaml"

    # transfers
    BaseTransferSource:
      $ref: "./components/schemas/transactions/transfers/sources/base_transfer_source.yaml"
    AddressTransferSource:
      $ref: "./components/schemas/transactions/transfers/sources/address_transfer_source.yaml"
    MpcTransferSource:
      $ref: "./components/schemas/transactions/transfers/sources/mpc_transfer_source.yaml"
    SafeTransferSource:
      $ref: "./components/schemas/transactions/transfers/sources/safe_transfer_source.yaml"
    ExchangeTransferSource:
      $ref: "./components/schemas/transactions/transfers/sources/exchange_transfer_source.yaml"
    TransferSource:
      $ref: "./components/schemas/transactions/transfers/sources/transfer_source.yaml"
    AddressTransferDestination:
      $ref: "./components/schemas/transactions/transfers/destinations/address_transfer_destination.yaml"
    ExchangeTransferDestination:
      $ref: "./components/schemas/transactions/transfers/destinations/exchange_transfer_destination.yaml"
    TransferDestinationType:
      $ref: "./components/schemas/transactions/transfers/destinations/destination_type.yaml"
    TransferDestination:
      $ref: "./components/schemas/transactions/transfers/destinations/transfer_destination.yaml"
    Transfer:
      $ref: "./components/schemas/transactions/transfers/transfer.yaml"
    SmartContractCall:
      $ref: "./components/schemas/transactions/smart_contract_call.yaml"
    SignMessage:
      $ref: "./components/schemas/transactions/message_sign.yaml"
    EstimateFee:
      $ref: "./components/schemas/transactions/estimate_fee.yaml"


    WebhookEvent:
      $ref: "./components/schemas/webhooks/event.yaml"
    WebhookEventType:
      $ref: "./components/schemas/webhooks/event_type.yaml"
    WebhookEventStatus:
      $ref: "./components/schemas/webhooks/event_status.yaml"
    WebhookEventLog:
      $ref: "./components/schemas/webhooks/event_log.yaml"

  parameters:
    # misc
    sortByParam:
      $ref: "./components/parameters/pagination/sort_by.yaml"
    directionParam:
      $ref: "./components/parameters/pagination/direction.yaml"
    limitParam:
      $ref: "./components/parameters/pagination/limit.yaml"
    beforeParam:
      $ref: "./components/parameters/pagination/before.yaml"
    afterParam:
      $ref: "./components/parameters/pagination/after.yaml"

    # wallets
    optionalAssetIdParam:
      $ref: "./components/parameters/wallets/asset_id_optional.yaml"
    requiredAssetIdParam:
      $ref: "./components/parameters/wallets/asset_id_required.yaml"
    optionalChainIdParam:
      $ref: "./components/parameters/wallets/chain_id_optional.yaml"
    optionalTokenIdParam:
      $ref: "./components/parameters/wallets/token_id_optional.yaml"
    requiredTokenIdParam:
      $ref: "./components/parameters/wallets/token_id_required.yaml"
    requiredWalletSubtypeParam:
      $ref: "./components/parameters/wallets/wallet_subtype_required.yaml"
    optionalWalletTypeParam:
      $ref: "./components/parameters/wallets/wallet_type_optional.yaml"
    optionalWalletSubtypeParam:
      $ref: "./components/parameters/wallets/wallet_subtype_optional.yaml"
    walletIdParam:
      $ref: "./components/parameters/wallets/wallet_id_path.yaml"
    addressIdParam:
      $ref: "./components/parameters/wallets/address_id_path.yaml"
    requiredAddressStrParam:
      $ref: "./components/parameters/wallets/address_str_required.yaml"
    requiredSubWalletIdParam:
      $ref: "./components/parameters/wallets/exchanges/sub_wallet_id_required.yaml"
    addressStrParam:
      $ref: "./components/parameters/wallets/address_str_optional.yaml"
    toAddressStrParam:
      $ref: "./components/parameters/wallets/to_address_str_required.yaml"
    fromAddressStrParam:
      $ref: "./components/parameters/wallets/from_address_str_optional.yaml"

    # mpc wallets
    keyGroupIdParam:
      $ref: "./components/parameters/wallets/mpcs/key_group_id_path.yaml"
    optionalKeyGroupTypeParam:
      $ref: "./components/parameters/wallets/mpcs/key_group_type_optional.yaml"
    projectIdParam:
      $ref: "./components/parameters/wallets/mpcs/project_id_path.yaml"
    optionalTargetKeyGroupIDParam:
      $ref: "./components/parameters/wallets/mpcs/target_key_group_id_optional.yaml"
    requiredTssRequestActionParam:
      $ref: "./components/parameters/wallets/mpcs/tss_request_action_required.yaml"
    tssRequestIdParam:
      $ref: "./components/parameters/wallets/mpcs/tss_request_id_path.yaml"
    requiredUpdateKeyGroupActionParam:
      $ref: "./components/parameters/wallets/mpcs/update_key_group_action_required.yaml"
    vaultIdParam:
      $ref: "./components/parameters/wallets/mpcs/vault_id_path.yaml"
    optionalVaultIdQueryParam:
      $ref: "./components/parameters/wallets/mpcs/vault_id_optional.yaml"
    optionalVaultNameParam:
      $ref: "./components/parameters/wallets/mpcs/vault_name_optional.yaml"

    # exchange wallets
    exchangeIdParam:
      $ref: "./components/parameters/wallets/exchanges/exchange_id_path.yaml"
    optionalExchangeIdParam:
      $ref: "./components/parameters/wallets/exchanges/exchange_id_optional.yaml"
    requiredExchangeIdParam:
      $ref: "./components/parameters/wallets/exchanges/exchange_id_required.yaml"
    optionalApikeyParam:
      $ref: "./components/parameters/wallets/exchanges/apikey_optional.yaml"
    optionalSecretParam:
      $ref: "./components/parameters/wallets/exchanges/secret_optional.yaml"
    optionalPassphraseParam:
      $ref: "./components/parameters/wallets/exchanges/passphrase_optional.yaml"

    # transactions
    optionalRequestIdParam:
      $ref: "./components/parameters/transactions/request_id_optional.yaml"
    optionalCoboIdParam:
      $ref: "./components/parameters/transactions/cobo_id_optional.yaml"
    optionalTxIdParam:
      $ref: "./components/parameters/transactions/tx_id_optional.yaml"
    optionalTransactionTypeParam:
      $ref: "./components/parameters/transactions/transaction_type_optional.yaml"
    optionalTransactionStatusParam:
      $ref: "./components/parameters/transactions/transaction_status_optional.yaml"
    optionalMinCreatedTimestampParam:
      $ref: "./components/parameters/transactions/min_created_timestamp_optional.yaml"
    optionalMaxCreatedTimestampParam:
      $ref: "./components/parameters/transactions/max_created_timestamp_optional.yaml"
    transactionIdParam:
      $ref: "./components/parameters/transactions/transaction_id_path.yaml"

    # webhooks
    webhookEventIdParam:
      $ref: "./components/parameters/webhooks/event_id_path.yaml"

  requestBodies:
    # wallets
    createWalletBody:
      $ref: "./components/request_bodies/wallets/create_wallet.yaml"
    UpdateWalletBody:
      $ref: "./components/request_bodies/wallets/update_wallet.yaml"
    createAddressBody:
      $ref: "./components/request_bodies/wallets/create_address.yaml"

    # mpc wallets
    createKeyGroupBody:
      $ref: "./components/request_bodies/wallets/mpcs/create_key_group.yaml"
    createMpcProjectBody:
      $ref: "./components/request_bodies/wallets/mpcs/create_project.yaml"
    createTssRequestBody:
      $ref: "./components/request_bodies/wallets/mpcs/create_tss_request.yaml"
    createMpcVaultBody:
      $ref: "./components/request_bodies/wallets/mpcs/create_vault.yaml"
    updateProjectBody:
      $ref: "./components/request_bodies/wallets/mpcs/update_project.yaml"
    updateVaultBody:
      $ref: "./components/request_bodies/wallets/mpcs/update_vault.yaml"

    # transfers
    createTransferBody:
      $ref: "./components/request_bodies/transactions/create_transfer_transaction.yaml"
    createSmartContractCallBody:
      $ref: "./components/request_bodies/transactions/create_smart_contract_call_transaction.yaml"
    createMessageSignBody:
      $ref: "./components/request_bodies/transactions/create_message_sign_transaction.yaml"
    estimateFeeBody:
      $ref: "./components/request_bodies/transactions/estimate_fee.yaml"
    feeRequestBody:
      $ref: "./components/request_bodies/transactions/fee_request.yaml"

  responses:
    # misc
    badRequestError:
      $ref: "./components/responses/errors/400_bad_request.yaml"
    unauthorizedError:
      $ref: "./components/responses/errors/401_unauthorized.yaml"
    forbiddenError:
      $ref: "./components/responses/errors/403_forbidden.yaml"
    notFoundError:
      $ref: "./components/responses/errors/404_not_found.yaml"
    tooManyRequestError:
      $ref: "./components/responses/errors/429_too_many_request.yaml"
    serviceUnavailableError:
      $ref: "./components/responses/errors/503_service_unavailable.yaml"

    # wallets
    getChainsResponse:
      $ref: "./components/responses/wallets/get_chains.yaml"
    getAssetsResponse:
      $ref: "./components/responses/wallets/get_assets.yaml"
    getTokensResponse:
      $ref: "./components/responses/wallets/get_tokens.yaml"
    getTokenBalancesResponse:
      $ref: "./components/responses/wallets/get_token_balances.yaml"
    getAssetBalancesResponse:
      $ref: "./components/responses/wallets/get_asset_balances.yaml"
    getWalletsResponse:
      $ref: "./components/responses/wallets/get_wallets.yaml"
    getWalletByIdResponse:
      $ref: "./components/responses/wallets/get_a_wallet.yaml"
    createWalletResponse:
      $ref: "./components/responses/wallets/create_wallet.yaml"
    updateWalletResponse:
      $ref: "./components/responses/wallets/update_wallet.yaml"
    spendableListResponse:
      $ref: "./components/responses/wallets/get_spendable_list.yaml"
    maxSendValueResponse:
      $ref: "./components/responses/wallets/get_max_send_value.yaml"
    getAddressesResponse:
      $ref: "./components/responses/wallets/get_addresses.yaml"
    getAddressByIdResponse:
      $ref: "./components/responses/wallets/get_a_address.yaml"
    createAddressResponse:
      $ref: "./components/responses/wallets/create_address.yaml"
    updateAddressResponse:
      $ref: "./components/responses/wallets/update_address.yaml"
    getAddressValidityResponse:
      $ref: "./components/responses/wallets/get_a_address_validity.yaml"

    # mpc wallets
    createKeyGroupsResponse:
      $ref: "./components/responses/wallets/mpcs/create_key_group.yaml"
    createMpcProjectResponse:
      $ref: "./components/responses/wallets/mpcs/create_project.yaml"
    createTssRequestResponse:
      $ref: "./components/responses/wallets/mpcs/create_vault.yaml"
    createMpcVaultResponse:
      $ref: "./components/responses/wallets/mpcs/create_vault.yaml"
    getCoboKeyHoldersResponse:
      $ref: "./components/responses/wallets/mpcs/get_cobo_key_holder.yaml"
    getKeyGroupResponse:
      $ref: "./components/responses/wallets/mpcs/get_key_group.yaml"
    getKeyGroupsResponse:
      $ref: "./components/responses/wallets/mpcs/get_key_groups.yaml"
    getMpcProjectResponse:
      $ref: "./components/responses/wallets/mpcs/get_project.yaml"
    getMpcProjectsResponse:
      $ref: "./components/responses/wallets/mpcs/get_projects.yaml"
    getTssRequestResponse:
      $ref: "./components/responses/wallets/mpcs/get_tss_request.yaml"
    getMpcVaultResponse:
      $ref: "./components/responses/wallets/mpcs/get_vault.yaml"
    getMpcVaultsResponse:
      $ref: "./components/responses/wallets/mpcs/get_vaults.yaml"
    deleteKeyGroupResponse:
      $ref: "./components/responses/wallets/mpcs/delete_key_group.yaml"
    putKeyGroupResponse:
      $ref: "./components/responses/wallets/mpcs/put_key_group.yaml"
    putTssRequestResponse:
      $ref: "./components/responses/wallets/mpcs/put_tss_request.yaml"
    putVaultResponse:
      $ref: "./components/responses/wallets/mpcs/put_vault.yaml"

    # exchanges
    getSubAccountIdsResponse:
      $ref: "./components/responses/wallets/exchanges/get_sub_account_ids.yaml"

    # transactions
    getChainFeeResponse:
      $ref: "./components/responses/transactions/get_chain_fee_price.yaml"
    getTransactionsResponse:
      $ref: "./components/responses/transactions/get_transactions.yaml"
    getTransactionByIdResponse:
      $ref: "./components/responses/transactions/get_a_transaction.yaml"
    estimateFeeResponse:
      $ref: "./components/responses/transactions/get_transaction_fee.yaml"
    createTransactionRequestResponse:
      $ref: "./components/responses/transactions/create_transaction_request.yaml"


  securitySchemes:
    CoboAuth:
      type: apiKey
      in: header
      name: BIZ-API-KEY
      description: The API key.

security:
  - CoboAuth: []
